# Name of application (make sure it has no spaces)
name: "jdbc2json"

# Domain of application (e.g. com.example)
domain: "com.pascalvaneck.jdbc2json"

# Display name of application (can have spaces)
# Usually also the application directory for Windows/Mac OSX (e.g. Program Files\Hello Server)
display_name: "Jdbc2Json"

short_description: "Utility to convert relational database to hierarchical JSON files."

# Type of launcher (CONSOLE or DAEMON)
type: CONSOLE

# Java class to run
main_class: "com.pascalvaneck.jdbc2json.Jdbc2Json"

# Platform launchers to generate (WINDOWS, LINUX, MAC_OSX)
platforms: [ WINDOWS, LINUX, MAC_OSX ]

# Working directory for app
#  RETAIN will not change the working directory
#  APP_HOME will change the workding directory to the home of the app
working_dir_mode: RETAIN

# Arguments for application (as though user typed them on command-line)
# These will be added immediately after the main class part of java command
#app_args: "-c config.yml"

# Arguments to use with the java command (e.g. way to pass -D arguments)
# "-Xrs" is good to include with daemons
#java_args: "-Xrs"

# minimum version of java required (system will be searched for acceptable jvm)
min_java_version: "1.8"

# min/max fixed memory (measured in MB)
#min_java_memory: 30
#max_java_memory: 256

# min/max memory by percentage of system
#min_java_memory_pct: 10
#max_java_memory_pct: 80

symlink_java: true

#run_dir: /var/run
